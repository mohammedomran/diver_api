// <auto-generated />
using System;
using Divers.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Divers.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211117160644_initial1")]
    partial class initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Divers.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("meals");
                });

            modelBuilder.Entity("Divers.Models.Mealrate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.ToTable("mealrates");
                });

            modelBuilder.Entity("Divers.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdultsNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Checkout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Chickin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KidsNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("RoomId");

                    b.ToTable("reservations");
                });

            modelBuilder.Entity("Divers.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Quantity = 15,
                            Type = "Standard"
                        },
                        new
                        {
                            Id = 1,
                            Quantity = 15,
                            Type = "Sea view"
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 15,
                            Type = "Garden view"
                        },
                        new
                        {
                            Id = 3,
                            Quantity = 15,
                            Type = "Royal suite"
                        },
                        new
                        {
                            Id = 5,
                            Quantity = 15,
                            Type = "Bool"
                        });
                });

            modelBuilder.Entity("Divers.Models.Roomrate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("roomrates");
                });

            modelBuilder.Entity("Divers.Models.Mealrate", b =>
                {
                    b.HasOne("Divers.Models.Meal", null)
                        .WithMany("Mealrates")
                        .HasForeignKey("MealId");
                });

            modelBuilder.Entity("Divers.Models.Reservation", b =>
                {
                    b.HasOne("Divers.Models.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId");

                    b.HasOne("Divers.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.Navigation("Meal");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Divers.Models.Roomrate", b =>
                {
                    b.HasOne("Divers.Models.Room", null)
                        .WithMany("Roomrates")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Divers.Models.Meal", b =>
                {
                    b.Navigation("Mealrates");
                });

            modelBuilder.Entity("Divers.Models.Room", b =>
                {
                    b.Navigation("Roomrates");
                });
#pragma warning restore 612, 618
        }
    }
}
